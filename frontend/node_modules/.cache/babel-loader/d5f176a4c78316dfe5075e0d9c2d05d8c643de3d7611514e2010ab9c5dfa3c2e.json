{"ast":null,"code":"var _jsxFileName = \"/Users/samfriedman/Documents/sloper_items/react_ui_sloper/frontend/src/components/Visualization/GraphMetricsD3.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useReducer, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphMetricsD3 = ({\n  results\n}) => {\n  _s();\n  const ref = useRef();\n  const stockSymbol = results.meta.symbol;\n  const metrics = results.indicators;\n  const dateKey = metrics[0][\"Datetime\"] ? \"Datetime\" : \"Date\";\n  const stockData = metrics.map(metric => {\n    return {\n      date: new Date(metric[dateKey]),\n      close: parseFloat(metric[\"Close\"]),\n      open: parseFloat(metric[\"Open\"]),\n      high: parseFloat(metric[\"High\"]),\n      low: parseFloat(metric[\"Low\"]),\n      volume: parseFloat(metric[\"Volume\"])\n    };\n  }).slice(1000, 1100);\n  const dates = stockData.map(data => data[\"date\"]);\n  const closingPrices = stockData.map(data => data[\"close\"]);\n  const xDomain = d3.extent(dates);\n  const yDomain = d3.extent(closingPrices);\n  useEffect(() => {\n    // set up svg\n    const w = 1100;\n    const h = 400;\n    const svg = d3.select(ref.current)\n    //responsive SVG needs these 2 attributes and no width and height attr\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 1100 400\")\n    //class to make it responsive\n    .classed(\"svg-content-responsive\", true);\n\n    // define scaling\n    const xScale = d3.scaleTime().domain(xDomain).range([0, w]);\n    const yScale = d3.scaleLinear().domain(yDomain).range([h, 0]); // starts in top left to bottom left\n\n    const generateScaledLine = d3.line().x((d, i) => xScale(i)).y(yScale).curve(d3.curveCardinal);\n\n    // set axes\n    const xAxis = d3.axisBottom(xScale).ticks(20);\n    // .tickFormat(dates)\n    const yAxis = d3.axisLeft(yScale).ticks(20);\n    // .tickFormat(closingPrices)\n\n    svg.append('g').call(xAxis).attr('transform', `translate(0, ${h})`).selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', \"rotate(-75)\");\n    svg.append('g').call(yAxis);\n\n    // set data\n    svg.selectAll('.line').data([stockData.map(data => data[\"close\"])]).join('path').attr('d', d => generateScaledLine(d)).attr('fill', 'none').attr('stroke', 'white');\n  }, []);\n  const createGraph = () => {\n    const outputSvg = /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      className: \"d3Svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }, this);\n    return outputSvg;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d3Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: stockSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), createGraph()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphMetricsD3, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = GraphMetricsD3;\nexport default GraphMetricsD3;\nvar _c;\n$RefreshReg$(_c, \"GraphMetricsD3\");","map":{"version":3,"names":["React","useRef","useEffect","useReducer","useState","d3","jsxDEV","_jsxDEV","GraphMetricsD3","results","_s","ref","stockSymbol","meta","symbol","metrics","indicators","dateKey","stockData","map","metric","date","Date","close","parseFloat","open","high","low","volume","slice","dates","data","closingPrices","xDomain","extent","yDomain","w","h","svg","select","current","attr","classed","xScale","scaleTime","domain","range","yScale","scaleLinear","generateScaledLine","line","x","d","i","y","curve","curveCardinal","xAxis","axisBottom","ticks","yAxis","axisLeft","append","call","selectAll","style","join","createGraph","outputSvg","className","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/samfriedman/Documents/sloper_items/react_ui_sloper/frontend/src/components/Visualization/GraphMetricsD3.js"],"sourcesContent":["import React, { useRef, useEffect, useReducer, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nconst GraphMetricsD3 = ({ results }) => {\n  const ref = useRef()\n\n  const stockSymbol = results.meta.symbol\n\n  const metrics = results.indicators\n  const dateKey = metrics[0][\"Datetime\"] ? \"Datetime\" : \"Date\"\n\n  const stockData = metrics.map((metric) => {\n    return {\n      date: new Date(metric[dateKey]),\n      close: parseFloat(metric[\"Close\"]),\n      open: parseFloat(metric[\"Open\"]),\n      high: parseFloat(metric[\"High\"]),\n      low: parseFloat(metric[\"Low\"]),\n      volume: parseFloat(metric[\"Volume\"]),\n    }\n  }).slice(1000, 1100)\n\n  const dates = stockData.map(data => data[\"date\"])\n  const closingPrices = stockData.map(data => data[\"close\"])\n\n  const xDomain = d3.extent(dates)\n  const yDomain = d3.extent(closingPrices)\n\n  useEffect(() => {\n    // set up svg\n    const w = 1100\n    const h = 400\n    const svg = d3.select(ref.current)\n      //responsive SVG needs these 2 attributes and no width and height attr\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 1100 400\")\n      //class to make it responsive\n      .classed(\"svg-content-responsive\", true);\n\n    // define scaling\n    const xScale = d3.scaleTime()\n      .domain(xDomain)\n      .range([0, w]);\n    const yScale = d3.scaleLinear()\n      .domain(yDomain)\n      .range([h, 0])      // starts in top left to bottom left\n\n    const generateScaledLine = d3.line()\n      .x((d, i) => xScale(i))\n      .y(yScale)\n      .curve(d3.curveCardinal)\n\n    // set axes\n    const xAxis = d3.axisBottom(xScale)\n      .ticks(20)\n      // .tickFormat(dates)\n    const yAxis = d3.axisLeft(yScale)\n      .ticks(20)\n      // .tickFormat(closingPrices)\n\n    svg.append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${h})`)\n      .selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', \"rotate(-75)\")\n    svg.append('g')\n      .call(yAxis)\n\n    // set data\n    svg.selectAll('.line')\n      .data([stockData.map(data => data[\"close\"])])\n      .join('path')\n      .attr('d', d => generateScaledLine(d))\n      .attr('fill', 'none')\n      .attr('stroke', 'white')\n\n  }, [])\n\n\n\n\n  const createGraph = () => {\n    const outputSvg = <svg ref={ref} className=\"d3Svg\" />\n\n    return outputSvg\n\n  }\n\n\n\n  return (\n    <div className=\"d3Container\">\n      <h1>{stockSymbol}</h1>\n      {createGraph()}\n    </div>\n  )\n}\n\nexport default GraphMetricsD3;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}